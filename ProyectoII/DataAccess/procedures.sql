CREATE PROCEDURE CRE_ACQUISITION_PR @P_ID int,
                                    @P_CREATIONDATE datetime,
                                    @P_CLOSINGDATE datetime,
                                    @P_PRICE decimal,
                                    @P_BUYER int,
                                    @P_CREATOR int
AS
INSERT INTO TBL_ACQUISITION (ID, CREATIONDATE, CLOSINGDATE, PRICE, BUYER, CREATOR)
VALUES (@P_ID, @P_CREATIONDATE, @P_CLOSINGDATE, @P_PRICE, @P_BUYER, @P_CREATOR)


go

CREATE PROCEDURE CRE_BID_PR @P_ID integer,
                            @P_AMOUNT decimal,
                            @P_DATE datetime,
                            @P_ACQUISITION int,
                            @P_USER int
AS
INSERT INTO TBL_BID(ID, Amount, Date, Acquisition, "User")
VALUES (@P_ID, @P_AMOUNT, @P_DATE, @P_ACQUISITION, @P_USER);

go

CREATE PROCEDURE CRE_DOCUMENTS_PR @P_FILEPATH NVARCHAR(50),
                                  @P_DESCRIPTION NVARCHAR(50),
                                  @P_SUSCRIPTOR int
AS
INSERT INTO TBL_DOCUMENTS(FILEPATH, DESCRIPTION, SUBSCRIPTION)
VALUES (@P_FILEPATH, @P_DESCRIPTION, @P_SUSCRIPTOR);
go

CREATE PROCEDURE CRE_INVOICE_PR @P_DETALLE NVARCHAR(200)
AS
INSERT INTO TBL_INVOICE(DETAIL)
VALUES (@P_DETALLE);
go

CREATE PROCEDURE CRE_ORGANIZATION_PR @P_ID integer,
                                     @P_NAME nvarchar(25)
AS
INSERT INTO TBl_ORGANIZATION(ID, Name)
VALUES (@P_ID, @P_NAME);
go

CREATE PROCEDURE CRE_PAYPAL_PR @P_ACCOUNT nvarchar(250),
                               @P_USER int
AS
INSERT INTO TBL_PAYPAL(ACCOUNT, "USER")
VALUES (@P_ACCOUNT, @P_USER);

go

CREATE PROCEDURE CRE_PHONE_PR @P_ID integer,
                              @P_NUMBER int,
                              @P_DESCRIPTION nvarchar(100),
                              @P_USER int
AS
INSERT INTO TBL_PHONE(ID, NUMBER, DESCRIPTION, "User")
VALUES (@P_ID, @P_NUMBER, @P_DESCRIPTION, @P_USER);

go

CREATE PROCEDURE CRE_TBL_CATEGORY_PR @P_NAME NVARCHAR(50)
AS
INSERT INTO TBL_CATEGORY(NAME)
values (@P_NAME)
go

CREATE PROCEDURE CRE_TBL_COLLECTION_PR @P_NAME NVARCHAR(50),
                                       @P_STATUS NVARCHAR(50),
                                       @P_DESCRIPTION NVARCHAR(50),
                                       @P_USER INT
AS
INSERT INTO TBL_COLLECTION(NAME, STATUS, DESCRIPTION, [USER])
values (@P_NAME, @P_STATUS, @P_DESCRIPTION, @P_USER)
go

CREATE PROCEDURE CRE_TBL_PASSWORD_PR @P_PASSWORDD NVARCHAR(50),
                                     @P_CREATIONDATE DATETIME,
                                     @P_USER INT
AS
INSERT INTO TBL_PASSWORD (PASSWORD, CREATIONDATE, [USER])
values (@P_PASSWORDD, @P_CREATIONDATE, @P_USER)
go

CREATE PROCEDURE CRE_TBL_USER_PR @P_ID int,
                                 @P_NAME nvarchar(50),
                                 @P_LASTNAME nvarchar(50),
                                 @P_NICKNAME nvarchar(50),
                                 @P_EMAIL nvarchar(50),
                                 @P_PREFERREDMETHOD nvarchar,
                                 @P_AVATAR nvarchar(250)
AS
INSERT INTO TBL_USER (ID, NAME, LASTNAME, NICKNAME, EMAIL, PREFERREDMETHOD, AVATAR)
values (@P_ID, @P_NAME, @P_LASTNAME, @P_NICKNAME, @P_EMAIL, @P_PREFERREDMETHOD, @P_AVATAR)
go

CREATE PROCEDURE CRE_TBL_WALLET_PR @P_USER INT,
                                   @P_BALANCE DECIMAL(2)
AS
INSERT INTO TBL_WALLET ([USER], BALANCE)
values (@P_USER, @P_BALANCE)
go


CREATE PROCEDURE DEL_ACQUISITION_PR @P_ID integer
AS
DELETE TBL_ACQUISITION
WHERE ID = @P_ID;

go


CREATE PROCEDURE DEL_BID_PR @P_ID integer
AS
DELETE TBL_BID
WHERE ID = @P_ID;

go

CREATE PROCEDURE DEL_DOCUMENTS_PR @P_ID int
AS
DELETE
from TBL_DOCUMENTS
WHERE ID = @P_ID
go

CREATE PROCEDURE DEL_INVOICE_PR @P_ID int
AS
DELETE
from TBL_INVOICE
WHERE ID = @P_ID
go


CREATE PROCEDURE DEL_ORGANIZATION_PR @P_ID integer
AS
DELETE TBL_ORGANIZATION
WHERE ID = @P_ID;

go


CREATE PROCEDURE DEL_PAYPAL_PR @P_ACCOUNT nvarchar(250)
AS
DELETE TBL_PAYPAL
WHERE ACCOUNT = @P_ACCOUNT;
go



CREATE PROCEDURE DEL_PHONE_PR @P_ID integer
AS
DELETE TBL_PHONE
WHERE ID = @P_ID;

go

CREATE PROCEDURE DEL_TBL_CATEGORY_PR @P_ID int
AS
DELETE
FROM TBL_CATEGORY
WHERE ID = @P_ID
go

CREATE PROCEDURE DEL_TBL_COLLECTION_PR @P_ID int
AS
DELETE
FROM TBL_COLLECTION
WHERE ID = @P_ID
go

CREATE PROCEDURE DEL_TBL_PASSWORD_PR @P_ID int
AS
DELETE
FROM TBL_PASSWORD
WHERE ID = @P_ID
go

CREATE PROCEDURE DEL_TBL_USER_PR @P_ID int
AS
DELETE
FROM TBL_USER
WHERE ID = @P_ID
go

CREATE PROCEDURE DEL_TBL_WALLET_PR @P_ID int
AS
DELETE
FROM TBL_WALLET
WHERE ID = @P_ID
go


CREATE PROCEDURE RET_ACQUISITION_PR @P_ID int
AS
SELECT ID, CREATIONDATE, CLOSINGDATE, PRICE, BUYER, CREATOR
from TBL_ACQUISITION
WHERE ID = @P_ID;

go


CREATE PROCEDURE RET_ALL_ACQUISITION_PR @P_ID int
AS
SELECT ID, CREATIONDATE, CLOSINGDATE, PRICE, BUYER, CREATOR
from TBL_ACQUISITION;


go


CREATE PROCEDURE RET_ALL_BID_PR
AS
SELECT ID, AMOUNT, DATE, ACQUISITION, "USER"
from TBL_BID;

go

CREATE PROCEDURE RET_ALL_CATEGORY_PR
AS
SELECT ID, NAME
FROM TBL_CATEGORY
go

CREATE PROCEDURE RET_ALL_COLLECTION_PR
AS
SELECT NAME, STATUS, DESCRIPTION, [USER]
FROM TBL_COLLECTION
go

CREATE PROCEDURE RET_ALL_DOCUMENTS_PR
AS
SELECT ID, FILEPATH, DESCRIPTION, SUBSCRIPTION
from TBL_DOCUMENTS;
go

CREATE PROCEDURE RET_ALL_INVOICE_PR
AS
SELECT ID, DETAIL
from TBL_INVOICE
go


CREATE PROCEDURE RET_ALL_ORGANIZATION_PR
AS
SELECT ID, NAME
from TBL_ORGANIZATION;

go

CREATE PROCEDURE RET_ALL_PASSWORD_PR @P_USERID int
AS
SELECT TBL_PASSWORD.ID, PASSWORD, CREATIONDATE, [USER]
FROM TBL_PASSWORD
where TBL_PASSWORD.[USER] = @P_USERID;
go


CREATE PROCEDURE RET_ALL_PAYPAL_PR @P_ACCOUNT nvarchar(250)
AS
SELECT ACCOUNT, "USER"
from TBL_PAYPAL;

go


CREATE PROCEDURE RET_ALL_PHONE_PR @P_ID integer
AS
SELECT ID, NUMBER, DESCRIPTION, "USER"
from TBL_PHONE;




 
go

CREATE PROCEDURE RET_ALL_TBL_USER_PR
AS
SELECT ID, NAME, LASTNAME, NICKNAME, EMAIL, PREFERREDMETHOD, AVATAR
FROM TBL_USER
go

CREATE PROCEDURE RET_ALL_WALLET_PR
AS
SELECT TBL_WALLET.ID, BALANCE, [USER]
from TBL_WALLET
go


CREATE PROCEDURE RET_BID_PR @P_ID integer
AS
SELECT ID, AMOUNT, DATE, ACQUISITION, "USER"
from TBL_BID
WHERE ID = @P_ID;


go

CREATE PROCEDURE RET_DOCUMENTS_PR @P_ID int
AS
SELECT ID, FILEPATH, DESCRIPTION, SUBSCRIPTION
from TBL_DOCUMENTS
WHERE ID = @P_ID
go

CREATE PROCEDURE RET_INVOICE_PR @P_ID int
AS
SELECT ID, DETAIL
from TBL_INVOICE
WHERE ID = @P_ID
go


CREATE PROCEDURE RET_ORGANIZATION_PR @P_ID integer
AS
SELECT ID, NAME
from TBL_ORGANIZATION
WHERE ID = @P_ID;

go


ALTER PROCEDURE [dbo].[RET_PAYPAL_PR] @P_USERID int
AS
SELECT *
from TBL_PAYPAL
WHERE USERID= @P_USERID;
GO


CREATE PROCEDURE RET_PHONE_PR @P_ID integer
AS
SELECT ID, NUMBER, DESCRIPTION, "USER"
from TBL_PHONE
WHERE ID = @P_ID;

go

CREATE PROCEDURE RET_TBL_CATEGORY_PR @P_ID int
AS
SELECT ID, NAME
FROM TBL_CATEGORY
where ID = @P_ID;
go

CREATE PROCEDURE RET_TBL_COLLECTION_PR @P_ID int
AS
SELECT NAME, STATUS, DESCRIPTION, [USER]
FROM TBL_COLLECTION
where ID = @P_ID;
go

CREATE PROCEDURE RET_TBL_PASSWORD_PR @P_ID int
AS
SELECT TBL_PASSWORD.ID, PASSWORD, CREATIONDATE, [USER]
FROM TBL_PASSWORD
where TBL_PASSWORD.ID = @P_ID;
go

CREATE PROCEDURE RET_TBL_USER_PR @P_ID int
AS
SELECT ID, NAME, LASTNAME, NICKNAME, EMAIL, PREFERREDMETHOD, AVATAR
FROM TBL_USER
WHERE ID = @P_ID
go

CREATE PROCEDURE RET_TBL_WALLET_PR @P_ID int
AS
SELECT TBL_WALLET.ID, BALANCE, [USER]
from TBL_WALLET
where TBL_WALLET.ID = @P_ID;
go


CREATE PROCEDURE UPD_ACQUISITION_PR @P_ID integer,
                                    @P_CREATIONDATE datetime,
                                    @P_CLOSINGDATE datetime,
                                    @P_PRICE decimal,
                                    @P_BUYER int,
                                    @P_CREATOR int
AS
UPDATE TBL_ACQUISTION
set CREATIONDATE = @P_CREATIONDATE,
    CLOSINGDATE  = @P_CLOSINGDATE,
    PRICE        = @P_PRICE,
    BUYER        = @P_BUYER,
    CREATOR      = @P_CREATOR
where ID = @P_ID;
go


CREATE PROCEDURE UPD_BID_PR @P_ID integer,
                            @P_AMOUNT decimal,
                            @P_DATE datetime,
                            @P_ACQUISITION int,
                            @P_USER int
AS
UPDATE TBL_BID
set AMOUNT      = @P_AMOUNT,
    DATE        = @P_DATE,
    ACQUISITION = @P_ACQUISITION,
    "USER"      = @P_USER
where ID = @P_ID;
go

CREATE PROCEDURE UPD_DOCUMENTS_PR @P_ID int,
                                  @P_FILEPATH NVARCHAR(50),
                                  @P_DESCRIPTION NVARCHAR(50),
                                  @P_SUSCRIPTOR int
AS
UPDATE TBL_DOCUMENTS
SET FILEPATH=@P_FILEPATH,
    DESCRIPTION=@P_DESCRIPTION,
    SUBSCRIPTION=@P_SUSCRIPTOR
WHERE ID = @P_ID
go

CREATE PROCEDURE UPD_INVOICE_PR @P_ID int,
                                @P_DETALLE NVARCHAR(200)
AS
UPDATE TBL_INVOICE
SET DETAIL=@P_DETALLE
WHERE ID = @P_ID
go


CREATE PROCEDURE UPD_ORGANIZATION_PR @P_ID integer,
                                     @P_NAME nvarchar(50)
AS
UPDATE TBL_ORGANIZATION
set NAME = @P_NAME
where ID = @P_ID;
go


CREATE PROCEDURE UPD_PHONE_PR @P_ID integer,
                              @P_NUMBER int,
                              @P_DESCRIPTION nvarchar(100),
                              @P_USER int
AS
UPDATE TBL_PHONE
set NUMBER      = @P_NUMBER,
    DESCRIPTION = @P_DESCRIPTION,
    "USER"      = @P_USER
where ID = @P_ID;
go

CREATE PROCEDURE UPD_TBL_CATEGORY_PR @P_ID int,
                                     @P_NAME NVARCHAR(50)
AS
UPDATE TBL_CATEGORY
SET NAME=@P_NAME
WHERE ID = @P_ID
go

CREATE PROCEDURE UPD_TBL_COLLECTION_PR @P_ID int,
                                       @P_STATUS NVARCHAR(50),
                                       @P_DESCRIPTION NVARCHAR(50),
                                       @P_USER INT
AS
UPDATE TBL_COLLECTION
SET STATUS=@P_STATUS,
    DESCRIPTION=@P_DESCRIPTION,
    [USER]=@P_USER
WHERE ID = @P_ID
go

CREATE PROCEDURE UPD_TBL_PASSWORD_PR @P_ID int,
                                     @P_PASSWORDD NVARCHAR(50),
                                     @P_CREATIONDATE DATETIME
AS
UPDATE TBL_PASSWORD
SET PASSWORD=@P_PASSWORDD,
    CREATIONDATE=@P_CREATIONDATE
WHERE ID = @P_ID
go

CREATE PROCEDURE UPD_TBL_USER_PR @P_ID int,
                                 @P_NAME nvarchar(50),
                                 @P_LASTNAME nvarchar(50),
                                 @P_NICKNAME nvarchar(50),
                                 @P_EMAIL nvarchar(50),
                                 @P_PREFERREDMETHOD nvarchar,
                                 @P_AVATAR nvarchar(250)
AS
UPDATE TBL_USER
SET ID=@P_ID,
    NAME=@P_NAME,
    LASTNAME=@P_LASTNAME,
    NICKNAME=@P_NICKNAME,
    EMAIL=@P_EMAIL,
    PREFERREDMETHOD=@P_PREFERREDMETHOD,
    AVATAR=@P_AVATAR
WHERE ID = @P_ID
go


CREATE PROCEDURE [dbo].[UPD_USERSTATUS_PR]
	@P_ID int,
	@P_STATUS nvarchar(20)
AS
UPDATE dbo.TBL_USER SET STATUS=@P_STATUS
WHERE (@P_ID=ID);
go

--USERACTION
ALTER PROCEDURE CRE_TBL_USERACTION_PR @P_USER INT, 
                                  @P_TYPE NVARCHAR(50),
								  @P_DATE DATETIME
AS
INSERT INTO TBL_USERACTION (TBL_USERACTION.[USER], TYPE,DATE)
values (@P_USER, @P_TYPE, @P_DATE)
go



--USERACTION
ALTER PROCEDURE DEL_USERACTION_PR @P_ID INT
AS 
DELETE
FROM TBL_USERACTION
WHERE TBL_USERACTION.ID = @P_ID
GO



--UserACtion
CREATE PROCEDURE RET_ALL_USERACTION_PR
AS 
SELECT TBL_USERACTION.ID, TBL_USERACTION.[USER], TBL_USERACTION.TYPE, TBL_USERACTION.DATE 
FROM TBL_USERACTION
GO

--UserACtion
ALTER PROCEDURE RET_USERACTION_PR @P_ID int
AS
SELECT TBL_USERACTION.ID, TBL_USERACTION.[USER], TBL_USERACTION.DATE, TBL_USERACTION.TYPE
FROM TBL_USERACTION
WHERE TBL_USERACTION.ID = @P_ID 
GO


CREATE PROCEDURE UPD_USERACTION_PR @P_ID int,
								   @P_TYPE varchar(50), 
								   @P_DATE datetime
                              
AS
UPDATE TBL_USERACTION
set TBL_USERACTION.DATE = @P_DATE,
    TBL_USERACTION.TYPE = @P_TYPE
where TBL_USERACTION.ID = @P_ID
go


--CATEGORYXUSER
ALTER PROCEDURE CRE_TBL_CATEGORYXUSER_PR @P_USER int,
								         @P_CATEGORY int
AS
INSERT INTO TBL_CATEGORYXUSER (TBL_CATEGORYXUSER.[USER], TBL_CATEGORYXUSER.CATEGORY)
values (@P_USER, @P_CATEGORY)
go



--CATEGORYXUSER
CREATE PROCEDURE DEL_CATEGORYXUSER_PR @P_ID INT
AS 
DELETE
FROM TBL_CATEGORYXUSER
WHERE TBL_CATEGORYXUSER.ID = @P_ID
GO



--CATEGORYXUSER
CREATE PROCEDURE RET_ALL_CATEGORYXUSER_PR
AS 
SELECT TBL_CATEGORYXUSER.ID, TBL_CATEGORYXUSER.[USER], TBL_CATEGORYXUSER.CATEGORY
FROM TBL_CATEGORYXUSER
GO

--CATEGORYXUSER
CREATE PROCEDURE RET_CATEGORYXUSER_PR @P_ID int
AS 
SELECT TBL_CATEGORYXUSER.ID, TBL_CATEGORYXUSER.[USER], TBL_CATEGORYXUSER.CATEGORY
FROM TBL_CATEGORYXUSER
WHERE TBL_CATEGORYXUSER.ID = @P_ID
GO


--CATEGORYXUSER
CREATE PROCEDURE UPD_CATEGORYXUSER_PR @P_ID int,
								      @P_CATEGORY int                           
AS
UPDATE TBL_CATEGORYXUSER
set TBL_CATEGORYXUSER.CATEGORY = @P_CATEGORY
where TBL_CATEGORYXUSER.ID = @P_ID
go
------------------------------------------
--Suscription

ALTER PROCEDURE CRE_TBL_SUSCRIPTION_PR @P_USER int,
								       @P_SUSCRIPTIONDATE datetime,
									   @P_ID INT
AS
INSERT INTO TBL_SUBSCRIPTION (TBL_SUBSCRIPTION.ID, TBL_SUBSCRIPTION.[USER], TBL_SUBSCRIPTION.SUSCRIPTIONDATE )
values (@P_ID, @P_USER, @P_SUSCRIPTIONDATE)
go


CREATE PROCEDURE DEL_SUSCRIPTION_PR @P_ID INT
AS 
DELETE
FROM TBL_SUBSCRIPTION
WHERE TBL_SUBSCRIPTION.ID = @P_ID
GO

CREATE PROCEDURE RET_ALL_SUSCRIPTION_PR
AS 
SELECT TBL_SUBSCRIPTION.ID, TBL_SUBSCRIPTION.[USER], TBL_SUBSCRIPTION.SUSCRIPTIONDATE
FROM TBL_SUBSCRIPTION
GO

CREATE PROCEDURE RET_SUSCRIPTION_PR @P_ID int
AS 
SELECT TBL_SUBSCRIPTION.ID, TBL_SUBSCRIPTION.[USER], TBL_SUBSCRIPTION.SUSCRIPTIONDATE
FROM TBL_SUBSCRIPTION
WHERE TBL_SUBSCRIPTION.ID = @P_ID
GO

CREATE PROCEDURE UPD_SUSCRIPTION_PR @P_ID int,
								    @P_SUSCRIPTIONDATE datetime
AS                       
UPDATE TBL_SUBSCRIPTION
set TBL_SUBSCRIPTION.SUSCRIPTIONDATE = @P_SUSCRIPTIONDATE
where TBL_SUBSCRIPTION.ID = @P_ID
go




------------------------------------------
--Document

CREATE PROCEDURE CRE_TBL_DOCUMENT_PR  @P_FILEPATH nvarchar(150),
									  @P_DESCRIPTION nvarchar(50),
                                      @P_SUBSCRIPTION INT

AS
INSERT INTO TBL_DOCUMENTS (TBL_DOCUMENTS.FILEPATH,  TBL_DOCUMENTS.DESCRIPTION, TBL_DOCUMENTS.SUBSCRIPTION)
values (@P_FILEPATH, @P_DESCRIPTION, @P_SUBSCRIPTION)
go

CREATE PROCEDURE DEL_DOCUMENT_PR @P_ID INT
AS 
DELETE 
FROM TBL_DOCUMENTS
WHERE TBL_DOCUMENTS.ID = @P_ID
GO

CREATE PROCEDURE RET_ALL_DOCUMENT_PR
AS 
SELECT TBL_DOCUMENTS.ID, TBL_DOCUMENTS.FILEPATH , TBL_DOCUMENTS.DESCRIPTION, TBL_DOCUMENTS.SUBSCRIPTION 
FROM TBL_DOCUMENTS
GO

CREATE PROCEDURE RET_DOCUMENT_PR @P_ID int
AS 
SELECT TBL_DOCUMENTS.ID, TBL_DOCUMENTS.FILEPATH , TBL_DOCUMENTS.DESCRIPTION, TBL_DOCUMENTS.SUBSCRIPTION 
FROM TBL_DOCUMENTS
WHERE TBL_DOCUMENTS.ID = @P_ID
GO

CREATE PROCEDURE UPD_DOCUMENT_PR @P_ID int,
                                 @P_FILEPATH nvarchar(150),
							     @P_DESCRIPTION nvarchar(50)
AS                       
UPDATE TBL_DOCUMENTS
set TBL_DOCUMENTS.FILEPATH = @P_FILEPATH, TBL_DOCUMENTS.DESCRIPTION = @P_DESCRIPTION
where TBL_DOCUMENTS.ID = @P_ID
go

--ROLE-----------------------------------------------------------------
--Procedures ROLE--
CREATE PROCEDURE [dbo].[CRE_TBL_ROLE_PR]
	@P_NAME nvarchar(50)
AS
	INSERT INTO dbo.TBL_ROLE(NAME)VALUES(@P_NAME);
go

CREATE PROCEDURE [dbo].[RET_ALL_TBL_ROLE_PR]
AS
	SELECT ID, NAME FROM TBL_ROLE;
RETURN 0
go

CREATE PROCEDURE [dbo].[RET_TBL_ROLE_PR]
	@P_ID int
AS
	SELECT ID, NAME FROM TBL_ROLE where @P_ID=ID;
RETURN 0
go

CREATE PROCEDURE [dbo].[DEL_TBL_ROLE_PR]
	@P_ID int
AS
	DELETE FROM dbo.TBL_ROLE WHERE (@P_ID=ID);
go

CREATE PROCEDURE [dbo].[UPD_TBL_ROLE_PR]
	@P_ID int,
	@P_NAME nvarchar(50)
AS
UPDATE dbo.TBL_ROLE SET NAME=@P_NAME
WHERE (@P_ID=ID);
go

--Create Table--
CREATE TABLE TBL_ROLE
(
    ID int identity(1,1) not null primary key,
    NAME nvarchar(50)
)
go

--ROLEXUSER---------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[CRE_TBL_ROLEXUSER_PR]
	@P_ROLEID int,
	@P_USERID int

AS
	INSERT INTO dbo.TBL_ROLEXUSER(ROLEID,USERID) VALUES(@P_ROLEID,
	@P_USERID);
go

CREATE PROCEDURE [dbo].[RET_ALL_TBL_ROLEXUSER_PR]
AS
	SELECT ID, ROLEID, USERID FROM TBL_ROLEXUSER;
RETURN 0
go

CREATE PROCEDURE [dbo].[RET_TBL_ROLEXUSER_PR]
	@P_ID int
AS
	SELECT ID, ROLEID, USERID FROM TBL_ROLEXUSER where @P_ID=ID;
RETURN 0
go

CREATE PROCEDURE [dbo].[DEL_TBL_ROLEXUSER_PR]
	@P_ID int
AS
	DELETE FROM dbo.TBL_ROLEXUSER WHERE (@P_ID=ID);
go

CREATE PROCEDURE [dbo].[UPD_TBL_ROLEXUSER_PR]
	@P_ID int,
	@P_ROLEID int,
	@P_USERID int
AS
UPDATE dbo.TBL_ROLEXUSER SET ROLEID=@P_ROLEID,USERID=@P_USERID
WHERE (@P_ID=ID);
go

--Create Table--
CREATE TABLE TBL_ROLEXUSER
(
    ID int identity(1,1) not null primary key,
	ROLEID int not null FOREIGN KEY REFERENCES TBL_role(ID),
    USERID int not null FOREIGN KEY REFERENCES TBL_USER(ID)
)
go

-----WALLET------------------------------------------------------------------------
CREATE PROCEDURE [dbo].[CRE_TBL_WALLET_PR]
	@P_ID nvarchar(16),
	@P_BALANCE decimal(20,2),
	@P_USERID int

AS
	INSERT INTO dbo.TBL_WALLET(ID,BALANCE,USERID) VALUES(@P_ID,@P_BALANCE,
	@P_USERID);
go

CREATE PROCEDURE [dbo].[RET_ALL_TBL_WALLET_PR]
AS
	SELECT ID,BALANCE,USERID FROM TBL_WALLET;
RETURN 0
go

CREATE PROCEDURE [dbo].[RET_TBL_WALLET_PR]
	@P_ID nvarchar(16)
AS
	SELECT ID,BALANCE,USERID FROM TBL_WALLET where @P_ID=ID;
RETURN 0
go

CREATE PROCEDURE [dbo].[DEL_TBL_WALLET_PR]
	@P_ID nvarchar(16)
AS
	DELETE FROM dbo.TBL_WALLET WHERE (@P_ID=ID);
go

CREATE PROCEDURE [dbo].[UPD_TBL_WALLET_PR]
	@P_ID nvarchar(16),
	@P_BALANCE decimal(20,2),
	@P_USERID int
AS
UPDATE dbo.TBL_WALLET SET ID=@P_ID,BALANCE=@P_BALANCE,USERID=@P_USERID
WHERE (@P_ID=ID);
go

--Create Table--

create table TBL_WALLET
(
    ID nvarchar(16) not null primary key,
    BALANCE decimal(20,2) not null,
    USERID int not null FOREIGN KEY REFERENCES TBL_USER(ID)	
)
go

-----INVOICE-------------------------------------------------------------------------------------------------
--Procedures INVOICE--
CREATE PROCEDURE [dbo].[CRE_TBL_INVOICE_PR]
	@P_DETAIL nvarchar(200)
AS
	INSERT INTO dbo.TBL_INVOICE(DETAIL)VALUES(@P_DETAIL);
go

CREATE PROCEDURE [dbo].[RET_ALL_TBL_INVOICE_PR]
AS
	SELECT ID, DETAIL FROM TBL_INVOICE;
RETURN 0
go

CREATE PROCEDURE [dbo].[RET_TBL_INVOICE_PR]
	@P_ID int
AS
	SELECT ID, DETAIL FROM TBL_INVOICE where @P_ID=ID;
RETURN 0
go

CREATE PROCEDURE [dbo].[DEL_TBL_INVOICE_PR]
	@P_ID int
AS
	DELETE FROM dbo.TBL_INVOICE WHERE (@P_ID=ID);
go

CREATE PROCEDURE [dbo].[UPD_TBL_INVOICE_PR]
	@P_ID int,
	@P_DETAIL nvarchar(200)
AS
UPDATE dbo.TBL_INVOICE SET DETAIL=@P_DETAIL
WHERE (@P_ID=ID);
go


--Create Table--
CREATE TABLE TBL_INVOICE
(
    ID int identity(1,1) not null primary key,
    DETAIL nvarchar(200)
)


--OTP Table



create table TBL_OTP
(
    ID int identity(1,1) not null primary key,
    OTPNumber nvarchar(6) not null,
    [DATETIME] Datetime not null,
    USERID int not null FOREIGN KEY REFERENCES TBL_USER(ID)	
)
go

--OTP Procedures
CREATE PROCEDURE CRE_OTP_PR  @P_USERID int,
						     @P_DATETIME Datetime,
                             @P_OTPNUMBER nvarchar(6)

AS
INSERT INTO TBL_OTP(USERID, [DATETIME], OTPNUMBER)
values (@P_USERID , @P_DATETIME, @P_OTPNUMBER)
go


CREATE PROCEDURE DEL_OTP_PR @P_ID INT
AS 
DELETE 
FROM TBL_OTP
WHERE TBL_OTP.ID = @P_ID
GO

CREATE PROCEDURE RET_ALL_OTP_PR
AS 
SELECT TBL_OTP.ID, TBL_OTP.USERID, TBL_OTP.[DATETIME], TBL_OTP.OTPNUMBER
FROM TBL_OTP
GO

CREATE PROCEDURE RET_OTP_PR @P_ID int
AS 
SELECT TBL_OTP.ID, TBL_OTP.USERID, TBL_OTP.[DATETIME], TBL_OTP.OTPNUMBER
FROM TBL_OTP
WHERE TBL_OTP.ID = @P_ID
GO

CREATE PROCEDURE UPD_OTP_BYUSER_PR @P_USERID int,
						           @P_DATETIME Datetime,
                                   @P_OTPNUMBER nvarchar(6)
AS                       
UPDATE TBL_OTP
set TBL_OTP.[DATETIME] = @P_DATETIME , TBL_OTP.OTPNUMBER = @P_OTPNUMBER
where TBL_OTP.USERID = @P_USERID
go


---Paypal procedures
ALTER PROCEDURE [dbo].[CRE_PAYPAL_PR] @P_ORDERID nvarchar(50),
									@P_USERID int
AS
INSERT INTO TBL_PAYPAL(ORDERID, USERID)
VALUES (@P_ORDERID, @P_USERID);
GO


ALTER PROCEDURE [dbo].[DEL_PAYPAL_PR] @P_ORDERID nvarchar(50)
AS
DELETE TBL_PAYPAL
WHERE ORDERID = @P_ORDERID;
GO



ALTER PROCEDURE [dbo].[RET_ALL_PAYPAL_PR]
AS
SELECT *
from TBL_PAYPAL;
GO

ALTER PROCEDURE [dbo].[RET_PAYPAL_PR] @P_ORDERID nvarchar(50)
AS
SELECT *
from TBL_PAYPAL
WHERE ORDERID = @P_ORDERID;
GO

ALTER PROCEDURE [dbo].[UPD_PAYPAL_PR] @P_USERID int,
                               @P_ORDERID nvarchar(50), 
                               @P_ORDERSTATUS nvarchar(50)
AS                       
UPDATE TBL_PAYPAL
set USERID = @P_USERID, ORDERSTATUS = @P_ORDERSTATUS
WHERE ORDERID = @P_ORDERID
GO
----new procedures for wallet
CREATE PROCEDURE [dbo].[UPD_WALLET_BYUSER_PR]  @P_USERID INT,
                                               @P_BALANCE DECIMAL(20,2)
AS
UPDATE TBL_WALLET 
SET BALANCE=@P_BALANCE
WHERE TBL_WALLET.[USERID] = @P_USERID
GO

CREATE PROCEDURE [dbo].[RET_WALLET_BYUSER_PR] @P_USERID nvarchar(50)
AS
SELECT ID,BALANCE,USERID FROM TBL_WALLET 
where @P_USERID=USERID;
GO

---fee

CREATE PROCEDURE [dbo].[UPD_FEE_PR]  @P_AMOUNT DECIMAL(10,2)
AS
UPDATE TBL_FEE 
SET AMOUNT=@P_AMOUNT
GO

CREATE PROCEDURE [dbo].[RET_ALL_FEE_PR]
AS
SELECT AMOUNT FROM TBL_FEE
GO


--NFTXAcquisition create
ALTER PROCEDURE [dbo].[CRE_NFTXACQUISITION_PR] @P_NFT int,
									@P_ACQUISITION_ID int
AS
INSERT INTO TBL_NFTXACQUISITION(NFT, ACQUISITION_ID)
VALUES (@P_NFT, @P_ACQUISITION_ID);
GO
---------------------------------------------------------------------------------------------
--TRANSACTIONWALLET--
--Procedures--
CREATE PROCEDURE [dbo].[CRE_TBL_TRANSACTIONWALLET_PR]
	@P_WALLETSENDER nvarchar(100),
	@P_WALLETRECEIVER nvarchar(100),
    @P_AMOUNT decimal(20,2),	
	@P_DESCRIPTION nvarchar(150),
	@P_TRANSACTIONDATE DATETIME
AS
	INSERT INTO dbo.TBL_TRANSACTIONWALLET(WALLETSENDER,WALLETRECEIVER,AMOUNT,DESCRIPTION,TRANSACTIONDATE) VALUES(@P_WALLETSENDER,
	@P_WALLETRECEIVER, @P_AMOUNT, @P_DESCRIPTION,@P_TRANSACTIONDATE);
go


CREATE PROCEDURE [dbo].[RET_ALL_TBL_TRANSACTIONWALLET_PR]
AS
	SELECT ID,WALLETSENDER,WALLETRECEIVER,AMOUNT,DESCRIPTION,TRANSACTIONDATE FROM TBL_TRANSACTIONWALLET;
RETURN 0
go

CREATE PROCEDURE [dbo].[RET_TBL_TRANSACTIONWALLET_PR]
	@P_ID int
AS
	SELECT ID,WALLETSENDER,WALLETRECEIVER,AMOUNT,DESCRIPTION,TRANSACTIONDATE FROM TBL_TRANSACTIONWALLET where @P_ID=ID;
RETURN 0
go

CREATE PROCEDURE [dbo].[DEL_TBL_TRANSACTIONWALLET_PR]
	@P_ID int
AS
	DELETE FROM dbo.TBL_TRANSACTIONWALLET WHERE (@P_ID=ID);
go

CREATE PROCEDURE [dbo].[UPD_TBL_TRANSACTIONWALLET_PR]
	@P_ID int,
	@P_WALLETSENDER nvarchar(100),
	@P_WALLETRECEIVER nvarchar(100),
    @P_AMOUNT decimal(20,2),	
	@P_DESCRIPTION nvarchar(150),
	@P_TRANSACTIONDATE DATETIME
AS
UPDATE dbo.TBL_TRANSACTIONWALLET SET WALLETSENDER=@P_WALLETSENDER,WALLETRECEIVER=@P_WALLETRECEIVER,AMOUNT=@P_AMOUNT,DESCRIPTION=@P_DESCRIPTION,TRANSACTIONDATE=@P_TRANSACTIONDATE
WHERE (@P_ID=ID);
go

--Create Table--

create table TBL_TRANSACTIONWALLET
(
    ID int identity(1,1) not null primary key,
	WALLETSENDER nvarchar(100) not null FOREIGN KEY REFERENCES TBL_WALLET(ID),
	WALLETRECEIVER nvarchar(100) not null FOREIGN KEY REFERENCES TBL_WALLET(ID),
    AMOUNT decimal(20,2) not null,	
	DESCRIPTION nvarchar(150) not null,
	TRANSACTIONDATE DATETIME not null,
)
go


--Procedure for auctions
create procedure RET_ALL_AUCTION_PR as 

select a.creationdate, a.closingdate, a.price as 'AuctionPrice', a.creator, a.buyer, nxa.NFT, n.Name as 'NFTName', n.Status as 'NFTStatus', n.Price as 'NFTPrice', n.Collection, c.Name as 'CollectionName', c.SaleStatus as 'CollectionSaleStatus'

from TBL_Acquisition as a
		inner join TBL_NFTXAcquisition as nxa
			on a.Id = nxa.Acquisition_Id
		inner join TBL_NFT as n
			on n.Id = nxa.NFT
		inner join TBL_Collection as c
			on n.Collection = c.Id; 
go


--procedure for update preferredMethod (Notification)


CREATE PROCEDURE UPD_USERNOTIFICATION_PR @P_ID int,
                                         @P_PREFERREDMETHOD nvarchar(5)
AS
UPDATE TBL_USER
set PREFERREDMETHOD  = @P_PREFERREDMETHOD 
where ID = @P_ID;
go
